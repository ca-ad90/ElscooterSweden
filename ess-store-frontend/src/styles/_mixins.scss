
// 4. TOOLS / MIXINS
// Reusable blocks of styles.
// Must be imported after _variables.scss, _functions.scss, and _animations.scss.

// --- Media Query ---
// Mobile-first media query mixin.
// @include respond(md) { ...styles }
@mixin respond($bp) {
  @if map-has-key($breakpoints, $bp) {
    @media (min-width: map-get($breakpoints, $bp)) {
      @content;
    }
  } @else {
    @warn "Breakpoint '#{$bp}' not found in $breakpoints map.";
  }
}

// --- Typography ---
// Applies fluid type using the function.
// @include fluid-type(320, 1280, 16, 24);
@mixin fluid-type($min-vw, $max-vw, $min-fs, $max-fs) {
  font-size: fluid-typo($min-vw, $max-vw, $min-fs, $max-fs);
}

// --- Transitions ---
// Shorthand for transitions.
// @include transition;
// @include transition(opacity, $transition-fast, $ease-in);
@mixin transition(
  $property: all,
  $duration: $transition-medium,
  $easing: $ease-in-out
) {
  transition: $property $duration $easing;
}

// --- Animations ---
// Reusable animation mixins.
@mixin anim-fade-in($duration: $transition-medium, $delay: 0s, $fill-mode: forwards) {
  opacity: 0; // Set initial state
  animation: $anim-fade-in $duration $ease-out $delay $fill-mode;
}

@mixin anim-slide-in-up($duration: $transition-medium, $delay: 0s, $fill-mode: forwards) {
  opacity: 0; // Set initial state
  animation: $anim-slide-in-up $duration $ease-out $delay $fill-mode;
}

// --- Layout ---
// Creates a "flow" context for vertical rhythm.
// @include flow(lg);
@mixin flow($spacing-key: "md") {
  & > * + * {
    margin-top: size-static($spacing-key);
  }
}
